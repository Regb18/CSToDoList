@model IEnumerable<CSToDoList.Models.ToDoItem>

@{
    ViewData["Title"] = "CompletedItems";
}


<p>
    <a asp-action="Index">Back to Index</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                Accessories
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (item.Completed == false)
            {

            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DueDate)
                    </td>
                    <td>
                        @*for an ICollection always think foreach loop, for displaying/getting data/etc...*@

                        <ul style="list-style:none">
                            @foreach (Accessory accessory in item.Accessories)
                            {
                                <li>
                                    @accessory.Name
                                </li>
                            }
                        </ul>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }

        }
    </tbody>
</table>
